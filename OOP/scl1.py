# ЁЯФ╣ Student ржХрзНрж▓рж╛рж╕ржЯрж┐ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
class Student:
    def __init__(self, name, current_class, id):
        # ЁЯФ╣ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржирж╛ржо, ржХрзНрж▓рж╛рж╕, ржПржмржВ ржЖржЗржбрж┐ рж╕рзЗржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
        self.name = name
        self.current_class = current_class
        self.id = id

    def __repr__(self):
        # ЁЯФ╣ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ рждржерзНржп рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж╛рж░ ржЬржирзНржп __repr__() ржорзЗржержб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
        return f"Student name: {self.name}, Studying in Class {self.current_class}, ID: {self.id}"


# ЁЯФ╣ Teacher ржХрзНрж▓рж╛рж╕ржЯрж┐ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
class Teacher:
    def __init__(self, name, sub, id):
        # ЁЯФ╣ рж╢рж┐ржХрзНрж╖ржХрзЗрж░ ржирж╛ржо, ржмрж┐рж╖рзЯ, ржПржмржВ ржЖржЗржбрж┐ рж╕рзЗржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
        self.name = name
        self.sub = sub
        self.id = id

    def __repr__(self):
        # ЁЯФ╣ рж╢рж┐ржХрзНрж╖ржХрзЗрж░ рждржерзНржп рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж╛рж░ ржЬржирзНржп __repr__() ржорзЗржержб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
        return f"Teacher name: {self.name}, Subject: {self.sub}, ID: {self.id}"


# ЁЯФ╣ School ржХрзНрж▓рж╛рж╕ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ, ржпрзЗржЦрж╛ржирзЗ рж╢рж┐ржХрзНрж╖ржХ ржУ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣ржмрзЗ
class School:
    def __init__(self, name):
        self.name = name  # ЁЯФ╣ рж╕рзНржХрзБрж▓рзЗрж░ ржирж╛ржо рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
        self.teachers = []  # ЁЯФ╣ рж╢рж┐ржХрзНрж╖ржХржжрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржЦрж╛рж▓рж┐ рж▓рж┐рж╕рзНржЯ
        self.students = []  # ЁЯФ╣ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржЦрж╛рж▓рж┐ рж▓рж┐рж╕рзНржЯ

    # ЁЯФ╣ ржирждрзБржи рж╢рж┐ржХрзНрж╖ржХ ржпрзЛржЧ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
    def add_teachers(self, name, sub):
        id = len(self.teachers) + 101  # ЁЯФ╣ рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ рж╢рж┐ржХрзНрж╖ржХрзЗрж░ ржЖржЗржбрж┐ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
        teacher = Teacher(name, sub, id)  # ЁЯФ╣ ржирждрзБржи Teacher ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐
        self.teachers.append(teacher)  # ЁЯФ╣ рж╢рж┐ржХрзНрж╖ржХржХрзЗ рждрж╛рж▓рж┐ржХрж╛рзЯ ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ

    # ЁЯФ╣ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА ржнрж░рзНрждрж┐ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
    def enroll(self, name, fee):
        if fee < 6500:
            print(f"Not enough money for enrollment for {name}.")
        else:
            id = len(self.students) + 1  # ЁЯФ╣ рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржЖржЗржбрж┐ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
            student = Student(name, 'C', id)  # ЁЯФ╣ ржирждрзБржи Student ржЕржмржЬрзЗржХрзНржЯ рждрзИрж░рж┐
            self.students.append(student)  # ЁЯФ╣ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржХрзЗ рждрж╛рж▓рж┐ржХрж╛рзЯ ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
            print(f"{name} is now a student with ID: {id}. Extra money returned: {fee - 6500}")

    # ЁЯФ╣ рж╕рзНржХрзБрж▓рзЗрж░ рж╕ржм рждржерзНржп ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж╛рж░ ржЬржирзНржп display() ржорзЗржержб ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
    def display(self):
        print("Welcome to", self.name)
        print("----------------- OUR TEACHERS ----------------")
        for teacher in self.teachers:
            print(teacher)
        print("----------------- OUR STUDENTS ----------------")
        for student in self.students:
            print(student)


# ЁЯФ╣ рж╕рзНржХрзБрж▓ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
hstu = School("HSTU")

# ЁЯФ╣ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛ рж╣ржЪрзНржЫрзЗ
num_students = int(input("Enter the number of students to add: "))
for i in range(num_students):
    name = input(f"Enter student name {i+1}: ")
    fee = int(input(f"Enter the money for student {i+1}: "))
    hstu.enroll(name, fee)

# ЁЯФ╣ рж╢рж┐ржХрзНрж╖ржХ ржпрзЛржЧ ржХрж░рж╛рж░ ржЬржирзНржп ржЗржиржкрзБржЯ ржирзЗржУрзЯрж╛ рж╣ржЪрзНржЫрзЗ
num_teachers = int(input("Enter number of teachers to add: "))
for i in range(num_teachers):
    teacher_name = input(f"Enter name for teacher {i+1}: ")
    teacher_subject = input(f"Enter subject for teacher {i+1}: ")
    hstu.add_teachers(teacher_name, teacher_subject)

# ЁЯФ╣ рж╕рзНржХрзБрж▓рзЗрж░ рждржерзНржп ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ
print()  # For a line break
hstu.display()
